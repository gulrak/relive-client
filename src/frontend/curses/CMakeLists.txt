
if(WIN32)
    set(CURSES_LIBRARIES pdcurses)
else()
    set(CURSES_NEED_NCURSES TRUE)
    if(NOT APPLE)
        set(CURSES_NEED_WIDE TRUE)
    endif()
    find_package(Curses REQUIRED)
    include_directories(${CURSES_INCLUDE_DIR})
endif()

#if(APPLE)
#    execute_process(COMMAND ${CMAKE_COMMAND} -E copy_if_different ${CMAKE_CURRENT_SOURCE_DIR}/relivecui.command ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/relivecui.command)
#endif()
add_executable(relivecui main.cpp info.hpp config.hpp ../../../thirdparty/ghc/cui.hpp)
target_link_libraries(relivecui relive-backend ${CURSES_LIBRARIES} ${SSL_BACKEND} ${AUDIO_BACKEND_LIBRARIES} ${SQLITE3_TARGET} Threads::Threads)

install(TARGETS relivecui DESTINATION bin COMPONENT application)

if(APPLE)
    set(CPACK_GENERATOR "productbuild")
    set(CPACK_COMPONENTS_ALL application)
    set(CPACK_productbuild_COMPONENT_INSTALL ON)
    set(CPACK_PACKAGING_INSTALL_PREFIX "/usr/local")
elseif(UNIX)
    find_program(DPKG_CMD dpkg)
    if(DPKG_CMD)
        set(CPACK_GENERATOR "DEB")
    else()
        find_program(RPMBUILD_CMD rpmbuild)
        if(RPMBUILD_CMD)
            set(CPACK_GENERATOR "RPM")
        else()
            set(CPACK_GENERATOR "TGZ")
        endif()
    endif()
elseif(WIN32)
    set(CPACK_GENERATOR "NSIS")
endif()
set(CPACK_BINARY_DEB "ON")
set(CPACK_SYSTEM_NAME "${HOST_OS}")
set(CPACK_PACKAGE_NAME "relivecui")
set(CPACK_PACKAGE_VERSION_MAJOR ${PROJECT_VERSION_MAJOR})
set(CPACK_PACKAGE_VERSION_MINOR ${PROJECT_VERSION_MINOR})
set(CPACK_PACKAGE_VERSION_PATCH ${PROJECT_VERSION_PATCH})
set(CPACK_PACKAGE_CONTACT "s.schuemann@pobox.com")
set(CPACK_PACKAGE_DESCRIPTION "A curses based stream replayer for reLive archives (http://relive.nu)")
set(CPACK_PACKAGE_HOMEPAGE_URL "https://relive.gulrak.net")
set(CPACK_DEBIAN_PACKAGE_SHLIBDEPS ON)
include(CPack)
